info_resource:
  class: sfDoctrineRouteCollection
  options:
    model:                InfoResource
    module:               info
    prefix_path:          /info
    column:               id
    with_wildcard_routes: true

about:
  url:  /about
  param:  { module: default, action: about }

new_contact_message:
  url: /contact
  param:  { module: default, action: newContactMessage }

terms_of_service:
  url:  /tos
  param:  { module: default, action: termsOfService }

flood_resources:
  url:  /flood
  param:  { module: default, action: floodResources }

# The main "have" actions
have:
  url:   /have
  param: { module: resource, action: have, section: have }
have_time:
  url:   /have/time
  param: { module: time, action: have, section: have }
have_stuff:
  url:   /have/stuff
  param: { module: stuff, action: have, section: have }

# The main "need" screens (there is no need_time - goes straight to the form)
need:
  url:   /need
  param: { module: resource, action: need, section: need }
need_time:
  class:  sfRequestRoute
  url:   /need/time/add
  param: { module: time, action: addNeed, section: need }
  requirements:
    sf_method: [get]
need_stuff:
  url:   /need/stuff
  param: { module: stuff, action: need, section: need }

# Create "need time" resource routes
add_need_time:
  class:  sfRequestRoute
  url:   /need/time/add
  param: { module: time, action: addNeed, section: need }
  requirements:
    sf_method: [get]
add_need_time_create:
  class:  sfRequestRoute
  url:   /need/time/add
  param: { module: time, action: addNeedCreate, section: need }
  requirements:
    sf_method: [post]

# Create "need stuff" resource routes
add_need_stuff:
  class:  sfRequestRoute
  url:   /need/stuff/add
  param: { module: stuff, action: addNeed, section: need }
  requirements:
    sf_method: [get]
add_need_stuff_create:
  class:  sfRequestRoute
  url:   /need/stuff/add
  param: { module: stuff, action: addNeedCreate, section: need }
  requirements:
    sf_method: [post]
# add have stuff resource routes
add_have_stuff:
  class:  sfRequestRoute
  url:   /have/stuff/add
  param: { module: stuff, action: addHave, section: have }
  requirements:
    sf_method: [get]
add_have_stuff_create:
  class:  sfRequestRoute
  url:   /have/stuff/add
  param: { module: stuff, action: addHaveCreate, section: have }
  requirements:
    sf_method: [post]

# "static" pages for more information
need_place:
  url:   /place
  param: { module: resource, action: place, section: need }
need_money:
  url:   /money
  param: { module: resource, action: money, section: need }
have_place:
  url:   /need/place
  param: { module: resource, action: place, section: have }
have_money:
  url:   /have/money
  param: { module: resource, action: money, section: have }

# Actions for listing Resources
time_list:
  url:   /time/list
  param: { module: resource, action: timeList }
stuff_list:
  url:   /stuff/list
  param: { module: resource, action: stuffList }

need_time_list:
  url:   /time/list
  param: { module: resource, action: timeList, type: need }
have_time_list:
  url:   /time/list
  param: { module: resource, action: timeList, type: have }
need_stuff_list:
  url:   /stuff/list
  param: { module: resource, action: stuffList, type: need }
have_stuff_list:
  url:   /stuff/list
  param: { module: resource, action: stuffList, type: have }

time_fulfill:
  class:    sfDoctrineRoute
  url:      /time/:id/fulfill
  param:    { module: resource, action: fulfill }
  options:  { type: object, model: TimeResource }
  requirements:
    sf_method:  POST

time_delete:
  class:    sfDoctrineRoute
  url:      /time/:id
  param:    { module: resource, action: delete }
  options:  { type: object, model: TimeResource }
  requirements:
    sf_method:  DELETE
    
stuff_fulfill:
  class:    sfDoctrineRoute
  url:   /stuff/:id/fulfill
  param:  { module: resource, action: fulfill }
  options: { sf_method: POST, type: object, model: StuffResource }
  requirements:
    sf_method:  POST
    
stuff_delete:
  class:    sfDoctrineRoute
  url:      /stuff/:id
  param:    { module: resource, action: delete }
  options:  { sf_method: DELETE, type: object, model: StuffResource }
  requirements:
    sf_method:  DELETE
    
# The "show" page for InfoResource
info_show:
  class:    sfDoctrineRoute
  url:      /info/:id
  options:  { type: object, model: InfoResource }
  param:    { module: info, action: show }

# The "show" page for StuffResource
stuff_show:
  class:    sfDoctrineRoute
  url:      /stuff/:id
  options:  { type: object, model: StuffResource }
  param:    { module: stuff, action: show }

need_stuff_show:
    class:    sfDoctrineRoute
    url:      /need/stuff/:id
    options:  { type: object, model: StuffResource }
    param:    { module: stuff, action: show, section: need  }


have_stuff_show:
  class:    sfDoctrineRoute
  url:      /have/stuff/:id
  options:  { type: object, model: StuffResource }
  param:    { module: stuff, action: show, section: have  }

# The "show" page for TimeResource
time_show:
  class:    sfDoctrineRoute
  url:      /time/:id
  options:  { type: object, model: TimeResource }
  param:    { module: time, action: show }

need_time_show:
  class:    sfDoctrineRoute
  url:      /need/time/:id
  options:  { type: object, model: TimeResource }
  param:    { module: time, action: show, section: need }

have_time_show:
  class:    sfDoctrineRoute
  url:      /have/time/:id
  options:  { type: object, model: TimeResource }
  param:    { module: time, action: show, section: have }
      
      
new_message_match_found:
  class:  sfRequestRoute
  url:   /stuff/:id/message
  param: { module: stuff, action: newMessage }
  requirements:
    sf_method: [post]

user_contact:
  class:    sfDoctrineRoute
  url:      /user/:id/contact
  options:  { type: object, model: sfGuardUser }
  param:    { module: user, action: contact }

# User management-related routes
user_password_login:
  url:   /auth/login
  param: { module: user, action: passwordLogin }
user_auth:
  url:   /auth/:token
  param: { module: user, action: authenticate }
user_resource:
  url:   /user/resource
  param: { module: user, action: resource }

# have your token sent to you
send_login_token:
  class:  sfRequestRoute
  url:   /user/send-token
  param: { module: user, action: sendLoginToken }
  requirements:
    sf_method: [get]
send_login_token_process:
  class:  sfRequestRoute
  url:   /user/send-token
  param: { module: user, action: sendLoginTokenProcess }
  requirements:
    sf_method: [post]

homepage:
  url:   /
  param: { module: default, action: index }
