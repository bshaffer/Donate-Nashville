about:
  url:  /about
  param:  { module: default, action: about }

terms_of_service:
  url:  /tos
  param:  { module: default, action: termsOfService }

# The main "have" actions
have:
  url:   /have
  param: { module: resource, action: have }
have_time:
  url:   /have/time
  param: { module: time, action: have }
have_stuff:
  url:   /have/stuff
  param: { module: stuff, action: have }

# The main "need" screens (there is no need_time - goes straight to the form)
need:
  url:   /need
  param: { module: resource, action: need }
need_stuff:
  url:   /need/stuff
  param: { module: stuff, action: need }

# Create "need time" resource routes
add_need_time:
  class:  sfRequestRoute
  url:   /need/time/add
  param: { module: time, action: addNeed }
  requirements:
    sf_method: [get]
add_need_time_create:
  class:  sfRequestRoute
  url:   /need/time/add
  param: { module: time, action: addNeedCreate }
  requirements:
    sf_method: [post]

# Create "need stuff" resource routes
add_need_stuff:
  class:  sfRequestRoute
  url:   /need/stuff/add
  param: { module: stuff, action: addNeed }
  requirements:
    sf_method: [get]
add_need_stuff_create:
  class:  sfRequestRoute
  url:   /need/stuff/add
  param: { module: stuff, action: addNeedCreate }
  requirements:
    sf_method: [post]
# add have stuff resource routes
add_have_stuff:
  class:  sfRequestRoute
  url:   /have/stuff/add
  param: { module: stuff, action: addHave }
  requirements:
    sf_method: [get]
add_have_stuff_create:
  class:  sfRequestRoute
  url:   /have/stuff/add
  param: { module: stuff, action: addHaveCreate }
  requirements:
    sf_method: [post]

# "static" pages for more information
need_housing:
  url:   /need/place
  param: { module: resource, action: housing }
need_money:
  url:   /need/money
  param: { module: resource, action: money }

# Actions for listing Resources
time_list:
  url:   /time/list
  param: { module: resource, action: timeList }
stuff_list:
  url:   /stuff/list
  param: { module: resource, action: stuffList }

need_time_list:
  url:   /time/list
  param: { module: resource, action: timeList, type: need }
have_time_list:
  url:   /time/list
  param: { module: resource, action: timeList, type: have }
need_stuff_list:
  url:   /stuff/list
  param: { module: resource, action: stuffList, type: need }
have_stuff_list:
  url:   /stuff/list
  param: { module: resource, action: stuffList, type: have }

time_fulfill:
  class:    sfDoctrineRoute
  url:      /time/:id/fulfill
  param:    { module: resource, action: fulfill }
  options:  { type: object, model: TimeResource }
  requirements:
    sf_method:  POST

time_delete:
  class:    sfDoctrineRoute
  url:      /time/:id
  param:    { module: resource, action: delete }
  options:  { type: object, model: TimeResource }
  requirements:
    sf_method:  DELETE
    
stuff_fulfill:
  class:    sfDoctrineRoute
  url:   /stuff/:id/fulfill
  param:  { module: resource, action: fulfill }
  options: { sf_method: POST, type: object, model: StuffResource }
  requirements:
    sf_method:  POST
    
stuff_delete:
  class:    sfDoctrineRoute
  url:      /stuff/:id
  param:    { module: resource, action: delete }
  options:  { sf_method: DELETE, type: object, model: StuffResource }
  requirements:
    sf_method:  DELETE
    
# The "show" page for StuffResource
stuff_show:
  class:    sfDoctrineRoute
  url:      /stuff/:id
  options:  { type: object, model: StuffResource }
  param:    { module: stuff, action: show }

# The "show" page for TimeResource
time_show:
  class:    sfDoctrineRoute
  url:      /time/:id
  options:  { type: object, model: TimeResource }
  param:    { module: time, action: show }

user_contact:
  class:    sfDoctrineRoute
  url:      /user/:id/contact
  options:  { type: object, model: sfGuardUser }
  param:    { module: user, action: contact }

# User management-related routes
user_auth:
  url:   /auth/:token
  param: { module: user, action: authenticate }
user_resource:
  url:   /user/resource
  param: { module: user, action: resource }

homepage:
  url:   /
  param: { module: default, action: index }
