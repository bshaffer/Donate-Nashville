<?php

/**
 * BaseResource
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $owner_id
 * @property enum $transaction_type
 * @property string $title
 * @property clob $description
 * @property boolean $show_contact_info
 * @property boolean $is_satisfied
 * @property string $address_1
 * @property string $address_2
 * @property string $city
 * @property string $state
 * @property string $zip
 * @property string $phone_1
 * @property string $phone_2
 * @property string $email
 * @property sfGuardUser $User
 * 
 * @method integer     getOwnerId()           Returns the current record's "owner_id" value
 * @method enum        getTransactionType()   Returns the current record's "transaction_type" value
 * @method string      getTitle()             Returns the current record's "title" value
 * @method clob        getDescription()       Returns the current record's "description" value
 * @method boolean     getShowContactInfo()   Returns the current record's "show_contact_info" value
 * @method boolean     getIsSatisfied()       Returns the current record's "is_satisfied" value
 * @method string      getAddress1()          Returns the current record's "address_1" value
 * @method string      getAddress2()          Returns the current record's "address_2" value
 * @method string      getCity()              Returns the current record's "city" value
 * @method string      getState()             Returns the current record's "state" value
 * @method string      getZip()               Returns the current record's "zip" value
 * @method string      getPhone1()            Returns the current record's "phone_1" value
 * @method string      getPhone2()            Returns the current record's "phone_2" value
 * @method string      getEmail()             Returns the current record's "email" value
 * @method sfGuardUser getUser()              Returns the current record's "User" value
 * @method Resource    setOwnerId()           Sets the current record's "owner_id" value
 * @method Resource    setTransactionType()   Sets the current record's "transaction_type" value
 * @method Resource    setTitle()             Sets the current record's "title" value
 * @method Resource    setDescription()       Sets the current record's "description" value
 * @method Resource    setShowContactInfo()   Sets the current record's "show_contact_info" value
 * @method Resource    setIsSatisfied()       Sets the current record's "is_satisfied" value
 * @method Resource    setAddress1()          Sets the current record's "address_1" value
 * @method Resource    setAddress2()          Sets the current record's "address_2" value
 * @method Resource    setCity()              Sets the current record's "city" value
 * @method Resource    setState()             Sets the current record's "state" value
 * @method Resource    setZip()               Sets the current record's "zip" value
 * @method Resource    setPhone1()            Sets the current record's "phone_1" value
 * @method Resource    setPhone2()            Sets the current record's "phone_2" value
 * @method Resource    setEmail()             Sets the current record's "email" value
 * @method Resource    setUser()              Sets the current record's "User" value
 * 
 * @package    skeleton
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseResource extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('resource');
        $this->hasColumn('owner_id', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => 4,
             ));
        $this->hasColumn('transaction_type', 'enum', null, array(
             'type' => 'enum',
             'notnull' => true,
             'values' => 
             array(
              0 => 'need',
              1 => 'have',
             ),
             ));
        $this->hasColumn('title', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('description', 'clob', null, array(
             'type' => 'clob',
             ));
        $this->hasColumn('show_contact_info', 'boolean', null, array(
             'type' => 'boolean',
             'default' => true,
             ));
        $this->hasColumn('is_satisfied', 'boolean', null, array(
             'type' => 'boolean',
             'default' => false,
             ));
        $this->hasColumn('address_1', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('address_2', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('city', 'string', 100, array(
             'type' => 'string',
             'length' => 100,
             ));
        $this->hasColumn('state', 'string', 100, array(
             'type' => 'string',
             'length' => 100,
             ));
        $this->hasColumn('zip', 'string', 100, array(
             'type' => 'string',
             'length' => 100,
             ));
        $this->hasColumn('phone_1', 'string', 100, array(
             'type' => 'string',
             'length' => 100,
             ));
        $this->hasColumn('phone_2', 'string', 100, array(
             'type' => 'string',
             'length' => 100,
             ));
        $this->hasColumn('email', 'string', 100, array(
             'type' => 'string',
             'length' => 100,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('sfGuardUser as User', array(
             'local' => 'owner_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $locatable0 = new Doctrine_Template_Locatable(array(
             'fields' => 
             array(
              0 => 'address_1',
              1 => 'address_2',
              2 => 'city',
              3 => 'state',
              4 => 'zip',
             ),
             ));
        $this->actAs($locatable0);
    }
}