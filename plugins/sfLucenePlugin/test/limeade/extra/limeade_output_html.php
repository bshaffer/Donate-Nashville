<?php
/*
 * This file is part of the limeade package
 * (c) 2007 Carl Vondrick <carl@carlsoft.net>
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */

/**
  * limeade_output_html outputs HTML test results
  *
  * @author Carl Vondrick <carl@carlsoft.net>
  * @package limeade
  * @version SVN: $Id: limeade_output_html.php 6956 2008-01-05 22:54:18Z Carl.Vondrick $
  */
class limeade_output_html extends lime_output
{
  public $title, $decorate = true;

  public function __construct($title = 'Test Results', $decorate = true)
  {
    $this->title = $title;
    $this->decorate = $decorate;

    $this->head();
  }

  public function __destruct()
  {
    $this->foot();
  }

  public function diag()
  {
    $messages = func_get_args();
    foreach ($messages as $message)
    {
      $this->comment($message);
    }
  }

  public function comment($message)
  {
    echo '<tr class="comment">';
    echo '<td class="key">#</td>';
    echo '<td class="value">' . $message . '</td>';
    echo '</tr>';
  }

  public function echoln($message, $param = null)
  {
    if (preg_match('/^((?:not ok|dubious) *\d*)\b(?:\s\-)?(.*)$/', $message, $matches))
    {
      $class = 'not_ok';
      $key = $matches[1];
      $message = $matches[2];
    }
    elseif (preg_match('/^(ok *\d*)\b(?:\s\-)?(.*)$/', $message, $matches))
    {
      $class = 'ok';
      $key = $matches[1];
      $message = $matches[2];
    }
    elseif (preg_match('/^1\.\.\d+$/', $message, $matches))
    {
      $class = 'other';
      $key = $matches[0];
      $message = '';
    }
    else
    {
      $class = 'other';
      $key = '';
      $message = '<pre>' . $message . '</pre>';
    }

    $message = preg_replace('/"(.+?)"/', '<span class="param">$1</span>', $message);
    $message = preg_replace('/(\->|\:\:)?([a-zA-Z0-9_]+?)\(\)/', '<span class="param">$1$2()</span>', $message);

    echo '<tr class="' . $class . '">';
    echo '<td class="key">' . $key . '</td>';
    echo '<td class="value">' . $message . '</td>';
    echo '</tr>';
  }

  public function green_bar($msg)
  {
    $this->table_end();

    echo '<div class="greenbar">' . $msg . '</div>';
  }

  public function red_bar($msg)
  {
    $this->table_end();

    echo '</table><div class="redbar">' . $msg . '</div>';
  }

  public function head()
  {
    if (!$this->decorate)
    {
      return;
    }

    echo '<html><head><title>' . $this->title . '</title><style>
        body { font-family : Arial }
        .key { text-align : right }
        .ok .key { color : green; }
        .not_ok .key { color : #fff; background-color : red; }
        .comment { color : #df881f; }
        .other { color : #666; }
        .param  { color : blue; }
        .resutls { border : 0; }
        .greenbar {
          color : #fff;
          font-weight : bold;
          background-color : green;
          padding : 15px;
        }
        .redbar {
          color : #fff;
          font-weight : bold;
          background-color : red;
          padding : 15px;
        }
        .shamelessplug {
          color : #333;
          text-align : right;
          font-size : 14px;
          padding : 5px;
        } .shamelessplug img { border : 0; }
        </style></head><body><h1>' . $this->title . '</h1><table class="results">';
  }

  public function foot()
  {
    if (!$this->decorate)
    {
      return;
    }

    echo '<div class="shamelessplug">Generated by the lime testing framework for <a href="http://www.symfony-project.com"><img src="http://www.symfony-project.org/images/symfony_button.gif" /></a></div></body></html>';
  }

  public function table_end()
  {
    if (!$this->decorate)
    {
      return;
    }

    echo '</table>';
  }
}